{"remainingRequest":"/home/knkbga/Documents/chartsHQ/SystemA/Client/node_modules/babel-loader/lib/index.js!/home/knkbga/Documents/chartsHQ/SystemA/Client/src/store.js","dependencies":[{"path":"/home/knkbga/Documents/chartsHQ/SystemA/Client/src/store.js","mtime":1561974480845},{"path":"/home/knkbga/Documents/chartsHQ/SystemA/Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/knkbga/Documents/chartsHQ/SystemA/Client/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.date.now\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    input: '',\n    stats: {},\n    prompt: ''\n  },\n  mutations: {\n    ongoingRequest: function ongoingRequest(state) {\n      state.status = 'wait';\n      state.prompt = '';\n      state.stats = {};\n    },\n    genStatsSuccess: function genStatsSuccess(state, result) {\n      state.stats = result.data;\n      state.status = '';\n      state.prompt = '';\n    },\n    genRandomSuccess: function genRandomSuccess(state, input) {\n      state.status = '';\n      state.input = JSON.stringify(input.data).replace('[', '').replace(']', '');\n      state.prompt = '';\n      state.stats = {};\n    },\n    changeInput: function changeInput(state, input) {\n      state.input = input;\n      state.prompt = '';\n      state.stats = {};\n    },\n    requestError: function requestError(state, errMessage) {\n      state.status = 'error';\n      state.prompt = errMessage;\n      setTimeout(2000, function () {\n        state.prompt = '';\n      });\n      state.stats = {};\n    }\n  },\n  actions: {\n    updateInput: function updateInput(_ref, input) {\n      var commit = _ref.commit;\n      commit('changeInput', input);\n    },\n    genStats: function genStats(_ref2, input) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        // console.log('Validity called');\n        commit('ongoingRequest');\n        axios({\n          url: 'http://localhost:8080/actions?method=IS-VALID-ENTRY&payload={entry: ' + input + '}&ts=' + Date.now(),\n          method: 'GET'\n        }).then(function (resp) {\n          if (resp.data.success == false) {\n            commit('requestError', resp.data.errMessage);\n            resolve(resp);\n            return;\n          } else {\n            axios({\n              url: 'http://localhost:8080/actions?method=CALCULATE-STATS&payload={entry:' + input + '}&ts=' + Date.now(),\n              method: 'GET'\n            }).then(function (data) {\n              if (resp.data.success == false) {\n                commit('requestError', resp.data.errMessage);\n                resolve(resp);\n                return;\n              } // console.log(\"calculate stats successful\");\n\n\n              commit('genStatsSuccess', data.data);\n              resolve(data);\n            });\n          }\n        }).catch(function (err) {\n          // console.log('error encountered', err);\n          commit('requestError', err);\n          reject(err);\n        });\n      });\n    },\n    genRandom: function genRandom(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        // console.log('genRandom called');\n        commit('ongoingRequest');\n        axios({\n          url: 'http://localhost:8080/actions?method=GEN-RAND&ts=' + Date.now(),\n          method: 'GET'\n        }).then(function (resp) {\n          if (resp.data.success == false) {\n            commit('requestError', resp.data.errMessage);\n            resolve(resp);\n            return;\n          } // console.log('genRandom successful');\n\n\n          commit('genRandomSuccess', resp.data);\n          resolve(resp);\n        }).catch(function (err) {\n          commit('requestError', err);\n          reject(err);\n        });\n      });\n    }\n  },\n  getters: {\n    getStatus: function getStatus(state) {\n      return state.status;\n    },\n    getInputString: function getInputString(state) {\n      return state.input;\n    },\n    getPrompt: function getPrompt(state) {\n      return state.prompt;\n    },\n    getStats: function getStats(state) {\n      return state.stats;\n    }\n  }\n});",{"version":3,"sources":["/home/knkbga/Documents/chartsHQ/SystemA/Client/src/store.js"],"names":["Vue","Vuex","axios","use","defaults","headers","post","Store","state","status","input","stats","prompt","mutations","ongoingRequest","genStatsSuccess","result","data","genRandomSuccess","JSON","stringify","replace","changeInput","requestError","errMessage","setTimeout","actions","updateInput","commit","genStats","Promise","resolve","reject","url","Date","now","method","then","resp","success","catch","err","genRandom","getters","getStatus","getInputString","getPrompt","getStats"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    input: '',\n    stats: {},\n    prompt: ''\n  },\n  mutations: {\n    ongoingRequest(state) {\n      state.status = 'wait'\n      state.prompt = ''\n      state.stats = {}\n    },\n    genStatsSuccess(state, result) {\n      state.stats = result.data \n      state.status = ''\n      state.prompt = ''\n    },\n    genRandomSuccess(state, input) {\n      state.status = '';\n      state.input = JSON.stringify(input.data).replace('[','').replace(']','')\n      state.prompt = ''\n      state.stats = {}\n    },\n    changeInput(state, input) {\n      state.input = input;\n      state.prompt = ''\n      state.stats = {}\n    },\n    requestError(state, errMessage) {\n      state.status = 'error'\n      state.prompt = errMessage\n      setTimeout(2000, function() {\n        state.prompt = ''\n      })\n      state.stats = {}\n    }\n  },\n  actions: {\n    updateInput({commit}, input){\n      commit('changeInput', input)\n    },\n    genStats({commit}, input){\n      return new Promise((resolve, reject) => {\n        // console.log('Validity called');\n        commit('ongoingRequest')\n        axios({\n          url: 'http://localhost:8080/actions?method=IS-VALID-ENTRY&payload={entry: ' + input + '}&ts=' + Date.now(),\n          method: 'GET'\n        })\n        .then(resp => {\n          if(resp.data.success == false) {\n            commit('requestError', resp.data.errMessage)\n            resolve(resp)\n            return;\n          } else {\n            axios({\n              url: 'http://localhost:8080/actions?method=CALCULATE-STATS&payload={entry:' + input + '}&ts=' + Date.now(),\n              method: 'GET'\n            })\n            .then(data => {\n              if(resp.data.success == false) {\n                commit('requestError', resp.data.errMessage)\n                resolve(resp)\n                return;\n              }\n              // console.log(\"calculate stats successful\");\n              commit('genStatsSuccess', data.data)\n              resolve(data)\n            })\n          }\n        })\n        .catch(err => {\n          // console.log('error encountered', err);\n          commit('requestError', err)\n          reject(err)\n        })\n      })\n    },\n    genRandom({commit}){\n      return new Promise((resolve, reject) => {\n        // console.log('genRandom called');\n        commit('ongoingRequest')\n        axios({\n          url: 'http://localhost:8080/actions?method=GEN-RAND&ts=' + Date.now(),\n          method: 'GET'\n        })\n        .then(resp => {\n          if(resp.data.success == false) {\n            commit('requestError', resp.data.errMessage)\n            resolve(resp)\n            return;\n          }\n          // console.log('genRandom successful');\n          commit('genRandomSuccess', resp.data)\n          resolve(resp)\n        })\n        .catch(err => {\n          commit('requestError', err)\n          reject(err)\n        })\n      })\n    }\n  },\n  getters: {\n    getStatus: state => state.status,\n    getInputString: state => state.input,\n    getPrompt: state => state.prompt,\n    getStats: state => state.stats\n  }\n})\n"]}]}